package br.com.pet.DAO;

import java.sql.Connection;
import java.sql.SQLException;

import java.sql.PreparedStatement;
import java.sql.ResultSet;

import br.com.pet.domain.Fornecedores;
import br.com.pet.factory.ConexaoFactory;

public class FornecedoresDAO {
 
	public void save(Fornecedores f) throws SQLException{
		StringBuilder sql = new StringBuilder();
		sql.append("INSERT INTO fornecedores ");
		sql.append("(descricao) ");
		sql.append("VALUES (?)");
		
		Connection conexao = ConexaoFactory.conectar();
		
		PreparedStatement comando = conexao.prepareStatement(sql.toString());
		comando.setString(1, f.getDescricao());
		comando.executeUpdate();
	}
	
	public void delete (Fornecedores f) throws SQLException{
		StringBuilder sql = new StringBuilder();
		sql.append("DELETE FROM fornecedores ");
		sql.append("WHERE codigo = ?");
		
		Connection conexao = ConexaoFactory.conectar();
		
		PreparedStatement comando = conexao.prepareStatement(sql.toString());
		comando.setInt(1, f.getCodigo());
		comando.executeUpdate();
	} 
	
	public void update (Fornecedores f) throws SQLException{
		StringBuilder sql = new StringBuilder();
		sql.append("UPDATE fornecedores ");
		sql.append("SET descricao = ? ");
		sql.append("WHERE codigo = ?");
		
		Connection conexao = ConexaoFactory.conectar();
		
		PreparedStatement comando = conexao.prepareStatement(sql.toString());
		comando.setString(1, f.getDescricao());
		comando.setInt(2, f.getCodigo());
		comando.executeUpdate();
		
		
		
	}
	
	public Fornecedores buscarPorCodigo(Fornecedores f) throws SQLException{
		StringBuilder sql = new StringBuilder();
		sql.append("SELECT codigo, descricao ");
		sql.append("FROM fornecedores ");
		sql.append("WHERE codigo = ? ");
		
		Connection conexao = ConexaoFactory.conectar();
		
		PreparedStatement comando = conexao.prepareStatement(sql.toString());
		
		comando.setInt(1, f.getCodigo());
		
		ResultSet resultado  = comando.executeQuery();
		Fornecedores retorno = null;
		
		if(resultado.next()){
			retorno = new Fornecedores();
			retorno.setCodigo(resultado.getInt("codigo"));
			retorno.setDescricao(resultado.getString("descricao"));
		}
		
		return retorno;
	}
	
	public static void main(String[] args) {
		/*Fornecedores f1 = new Fornecedores();
		f1.setDescricao("Descrição 1");
		
		Fornecedores f2 = new Fornecedores();
		f2.setDescricao("Descrição 2");
		
		FornecedoresDAO fao = new FornecedoresDAO();
		try {
			fao.save(f1);
			fao.save(f2);
			System.out.println("Salvo com Sucesso!!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Ocorreu um Erro!!");
		}
		
		Fornecedores f1 = new Fornecedores();
		f1.setCodigo(2);
		FornecedoresDAO fao = new FornecedoresDAO();
		try {
			fao.delete(f1);
			System.out.println("Deletado com Sucesso!!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Ocorreu um Erro!!");
		}
		
		Fornecedores f1 = new Fornecedores();
		f1.setCodigo(1);
		f1.setDescricao("Malta");
		
		FornecedoresDAO fao = new FornecedoresDAO();
		try {
			fao.update(f1);
			System.out.println("Editado com Sucesso!!");
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Ocorreu um Erro!!");
		}*/
		
		Fornecedores f1 = new Fornecedores();
		f1.setCodigo(1);
		
		Fornecedores f2 = new Fornecedores();
		f2.setCodigo(2);
		
		FornecedoresDAO fao = new FornecedoresDAO();
		try {
			Fornecedores f3 = fao.buscarPorCodigo(f1);
			Fornecedores f4 = fao.buscarPorCodigo(f2);
			
			System.out.println("Resultado 1: " + f3);
			System.out.println("Resultado 2: " + f4);
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("Ocorreu um Erro!!");
		}
		
	}
}
